{"ast":null,"code":"// import React, { useState } from \"react\";\n\n// const DoctorShare = () => {\n//   const [searchFilters, setSearchFilters] = useState({\n//     billNo: \"\",\n//     mrNo: \"\",\n//     patientName: \"\",\n//     fromDate: \"\",\n//     toDate: \"\",\n//   });\n\n//   const [pageSize, setPageSize] = useState(5);\n//   const [currentPage, setCurrentPage] = useState(1);\n\n//   const mockData = [\n//     {\n//       id: 1,\n//       mrNo: 1701,\n//       tariffName: \"MJPJAY\",\n//       sponsorName: \"Medify CMP\",\n//       billDate: \"Jan 2, 2024\",\n//       discount: 0,\n//       netAmount: 100,\n//       patientName: \"Mrs. Ningamma Aralikatti\",\n//       govNo: \"Gov/2025/000194\",\n//       billNo: \"Gov/2025/01/02/0000139\",\n//       billAmount: 600,\n//     },\n//     // Repeat mock data as needed for pagination\n//   ];\n\n//   const tableData = mockData.slice(\n//     (currentPage - 1) * pageSize,\n//     currentPage * pageSize\n//   );\n\n//   const handleFilterChange = (key, value) => {\n//     setSearchFilters({ ...searchFilters, [key]: value });\n//   };\n\n//   const handlePageChange = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   const handlePageSizeChange = (size) => {\n//     setPageSize(Number(size));\n//     setCurrentPage(1); // Reset to first page\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <h2>Doctor Share</h2>\n//       {/* Search Section */}\n//       <div\n//         style={{\n//           display: \"flex\",\n//           gap: \"10px\",\n//           backgroundColor: \"#eaf4ff\",\n//           padding: \"10px\",\n//           borderRadius: \"5px\",\n//         }}\n//       >\n//         <input\n//           type=\"text\"\n//           placeholder=\"Bill No.\"\n//           value={searchFilters.billNo}\n//           onChange={(e) => handleFilterChange(\"billNo\", e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"MR No.\"\n//           value={searchFilters.mrNo}\n//           onChange={(e) => handleFilterChange(\"mrNo\", e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Patient First Name\"\n//           value={searchFilters.patientName}\n//           onChange={(e) => handleFilterChange(\"patientName\", e.target.value)}\n//         />\n//         <input\n//           type=\"date\"\n//           placeholder=\"From Date\"\n//           value={searchFilters.fromDate}\n//           onChange={(e) => handleFilterChange(\"fromDate\", e.target.value)}\n//         />\n//         <input\n//           type=\"date\"\n//           placeholder=\"To Date\"\n//           value={searchFilters.toDate}\n//           onChange={(e) => handleFilterChange(\"toDate\", e.target.value)}\n//         />\n//         <button style={{ backgroundColor: \"#007bff\", color: \"#fff\" }}>\n//           Search Key\n//         </button>\n//         <button style={{ backgroundColor: \"#ff4d4d\", color: \"#fff\" }}>\n//           Reset\n//         </button>\n//       </div>\n\n//       {/* Table Section */}\n//       <table\n//         style={{\n//           width: \"100%\",\n//           marginTop: \"20px\",\n//           borderCollapse: \"collapse\",\n//         }}\n//       >\n//         <thead>\n//           <tr style={{ backgroundColor: \"#f2f2f2\" }}>\n//             <th>Sr No.</th>\n//             <th>Action</th>\n//             <th>Mr No.</th>\n//             <th>Tariff Name</th>\n//             <th>Sponsor Name</th>\n//             <th>Bill Date</th>\n//             <th>Discount</th>\n//             <th>Net Amount</th>\n//             <th>Patient Name</th>\n//             <th>Gov No.</th>\n//             <th>Bill No.</th>\n//             <th>Bill Amount</th>\n//             <th>Freeze/Unfreeze</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {tableData.map((row, index) => (\n//             <tr key={row.id}>\n//               <td>{(currentPage - 1) * pageSize + index + 1}</td>\n//               <td>\n//                 <button\n//                   style={{\n//                     backgroundColor: \"#007bff\",\n//                     color: \"#fff\",\n//                     border: \"none\",\n//                     borderRadius: \"4px\",\n//                     padding: \"4px 8px\",\n//                   }}\n//                 >\n//                   Edit\n//                 </button>\n//               </td>\n//               <td>{row.mrNo}</td>\n//               <td>{row.tariffName}</td>\n//               <td>{row.sponsorName}</td>\n//               <td>{row.billDate}</td>\n//               <td>{row.discount}</td>\n//               <td>{row.netAmount}</td>\n//               <td>{row.patientName}</td>\n//               <td>{row.govNo}</td>\n//               <td>{row.billNo}</td>\n//               <td>{row.billAmount}</td>\n//               <td>\n//                 <input type=\"checkbox\" />\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Pagination Section */}\n//       <div\n//         style={{\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//           alignItems: \"center\",\n//           marginTop: \"20px\",\n//         }}\n//       >\n//         <select\n//           value={pageSize}\n//           onChange={(e) => handlePageSizeChange(e.target.value)}\n//         >\n//           <option value={5}>5</option>\n//           <option value={10}>10</option>\n//           <option value={20}>20</option>\n//         </select>\n//         <div>\n//           {[...Array(Math.ceil(mockData.length / pageSize)).keys()].map((page) => (\n//             <button\n//               key={page}\n//               onClick={() => handlePageChange(page + 1)}\n//               style={{\n//                 margin: \"0 5px\",\n//                 padding: \"5px 10px\",\n//                 backgroundColor: currentPage === page + 1 ? \"#007bff\" : \"#fff\",\n//                 color: currentPage === page + 1 ? \"#fff\" : \"#000\",\n//                 border: \"1px solid #ccc\",\n//                 borderRadius: \"4px\",\n//               }}\n//             >\n//               {page + 1}\n//             </button>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DoctorShare;","map":{"version":3,"names":[],"sources":["D:/React-workspace/my-app1/src/Components/Doctor-share/doctorShare.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// const DoctorShare = () => {\r\n//   const [searchFilters, setSearchFilters] = useState({\r\n//     billNo: \"\",\r\n//     mrNo: \"\",\r\n//     patientName: \"\",\r\n//     fromDate: \"\",\r\n//     toDate: \"\",\r\n//   });\r\n\r\n//   const [pageSize, setPageSize] = useState(5);\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n\r\n//   const mockData = [\r\n//     {\r\n//       id: 1,\r\n//       mrNo: 1701,\r\n//       tariffName: \"MJPJAY\",\r\n//       sponsorName: \"Medify CMP\",\r\n//       billDate: \"Jan 2, 2024\",\r\n//       discount: 0,\r\n//       netAmount: 100,\r\n//       patientName: \"Mrs. Ningamma Aralikatti\",\r\n//       govNo: \"Gov/2025/000194\",\r\n//       billNo: \"Gov/2025/01/02/0000139\",\r\n//       billAmount: 600,\r\n//     },\r\n//     // Repeat mock data as needed for pagination\r\n//   ];\r\n\r\n//   const tableData = mockData.slice(\r\n//     (currentPage - 1) * pageSize,\r\n//     currentPage * pageSize\r\n//   );\r\n\r\n//   const handleFilterChange = (key, value) => {\r\n//     setSearchFilters({ ...searchFilters, [key]: value });\r\n//   };\r\n\r\n//   const handlePageChange = (page) => {\r\n//     setCurrentPage(page);\r\n//   };\r\n\r\n//   const handlePageSizeChange = (size) => {\r\n//     setPageSize(Number(size));\r\n//     setCurrentPage(1); // Reset to first page\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\" }}>\r\n//       <h2>Doctor Share</h2>\r\n//       {/* Search Section */}\r\n//       <div\r\n//         style={{\r\n//           display: \"flex\",\r\n//           gap: \"10px\",\r\n//           backgroundColor: \"#eaf4ff\",\r\n//           padding: \"10px\",\r\n//           borderRadius: \"5px\",\r\n//         }}\r\n//       >\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Bill No.\"\r\n//           value={searchFilters.billNo}\r\n//           onChange={(e) => handleFilterChange(\"billNo\", e.target.value)}\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"MR No.\"\r\n//           value={searchFilters.mrNo}\r\n//           onChange={(e) => handleFilterChange(\"mrNo\", e.target.value)}\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Patient First Name\"\r\n//           value={searchFilters.patientName}\r\n//           onChange={(e) => handleFilterChange(\"patientName\", e.target.value)}\r\n//         />\r\n//         <input\r\n//           type=\"date\"\r\n//           placeholder=\"From Date\"\r\n//           value={searchFilters.fromDate}\r\n//           onChange={(e) => handleFilterChange(\"fromDate\", e.target.value)}\r\n//         />\r\n//         <input\r\n//           type=\"date\"\r\n//           placeholder=\"To Date\"\r\n//           value={searchFilters.toDate}\r\n//           onChange={(e) => handleFilterChange(\"toDate\", e.target.value)}\r\n//         />\r\n//         <button style={{ backgroundColor: \"#007bff\", color: \"#fff\" }}>\r\n//           Search Key\r\n//         </button>\r\n//         <button style={{ backgroundColor: \"#ff4d4d\", color: \"#fff\" }}>\r\n//           Reset\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Table Section */}\r\n//       <table\r\n//         style={{\r\n//           width: \"100%\",\r\n//           marginTop: \"20px\",\r\n//           borderCollapse: \"collapse\",\r\n//         }}\r\n//       >\r\n//         <thead>\r\n//           <tr style={{ backgroundColor: \"#f2f2f2\" }}>\r\n//             <th>Sr No.</th>\r\n//             <th>Action</th>\r\n//             <th>Mr No.</th>\r\n//             <th>Tariff Name</th>\r\n//             <th>Sponsor Name</th>\r\n//             <th>Bill Date</th>\r\n//             <th>Discount</th>\r\n//             <th>Net Amount</th>\r\n//             <th>Patient Name</th>\r\n//             <th>Gov No.</th>\r\n//             <th>Bill No.</th>\r\n//             <th>Bill Amount</th>\r\n//             <th>Freeze/Unfreeze</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {tableData.map((row, index) => (\r\n//             <tr key={row.id}>\r\n//               <td>{(currentPage - 1) * pageSize + index + 1}</td>\r\n//               <td>\r\n//                 <button\r\n//                   style={{\r\n//                     backgroundColor: \"#007bff\",\r\n//                     color: \"#fff\",\r\n//                     border: \"none\",\r\n//                     borderRadius: \"4px\",\r\n//                     padding: \"4px 8px\",\r\n//                   }}\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//               </td>\r\n//               <td>{row.mrNo}</td>\r\n//               <td>{row.tariffName}</td>\r\n//               <td>{row.sponsorName}</td>\r\n//               <td>{row.billDate}</td>\r\n//               <td>{row.discount}</td>\r\n//               <td>{row.netAmount}</td>\r\n//               <td>{row.patientName}</td>\r\n//               <td>{row.govNo}</td>\r\n//               <td>{row.billNo}</td>\r\n//               <td>{row.billAmount}</td>\r\n//               <td>\r\n//                 <input type=\"checkbox\" />\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n\r\n//       {/* Pagination Section */}\r\n//       <div\r\n//         style={{\r\n//           display: \"flex\",\r\n//           justifyContent: \"space-between\",\r\n//           alignItems: \"center\",\r\n//           marginTop: \"20px\",\r\n//         }}\r\n//       >\r\n//         <select\r\n//           value={pageSize}\r\n//           onChange={(e) => handlePageSizeChange(e.target.value)}\r\n//         >\r\n//           <option value={5}>5</option>\r\n//           <option value={10}>10</option>\r\n//           <option value={20}>20</option>\r\n//         </select>\r\n//         <div>\r\n//           {[...Array(Math.ceil(mockData.length / pageSize)).keys()].map((page) => (\r\n//             <button\r\n//               key={page}\r\n//               onClick={() => handlePageChange(page + 1)}\r\n//               style={{\r\n//                 margin: \"0 5px\",\r\n//                 padding: \"5px 10px\",\r\n//                 backgroundColor: currentPage === page + 1 ? \"#007bff\" : \"#fff\",\r\n//                 color: currentPage === page + 1 ? \"#fff\" : \"#000\",\r\n//                 border: \"1px solid #ccc\",\r\n//                 borderRadius: \"4px\",\r\n//               }}\r\n//             >\r\n//               {page + 1}\r\n//             </button>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DoctorShare;\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}